The widespread adoption of extended Berkeley Packet Filter (eBPF) programs for high-performance, programmable 
kernel applications has introduced new security challenges, particularly in ensuring secure information flows. 
eBPF programs deal with sensitiva data, and since they are executed in a privileged context such as the operating 
system kernel, there is the possibility of unintended information leakage. The existing tools, such as the eBPF 
verifier, do not track sensitive data propagation within eBPF programs, leaving a gap in the safety of information 
flows.

This thesis proposes a solution for this problem, the formalization and development of a framework for information 
flow analysis in eBPF programs. The framework wil employ taint analysis techniques to track the flow of sensitive 
data, classifying it using binary security levels, Low and High. By providing detailed insights into the security 
classification of the registers and memory cells at various points of execution, the framework aims to prevent 
potential leaks of secret information, therefore improving the security and reliability of eBPF programs. 

This framework will be modelled and formalized using operational semantics and context-sensitive flow rules, using 
mathematical constructs to prove soundness, ensuring no violations are missed, and also completeness, detecting all 
violations. Additionaly, fixpoint convergence techniques will be employed, ensuring that it completes when the 
analysis reaches a stable state.

Real-world scenarios, such as credential leaks in network traffic and unauthorized memory access through system calls, 
will validate the framework's utility.

This research addresses a critical gap in eBPF studies, offering both theoretical contributions to information flow 
security and practical tools for enhancing eBPF's safety in production environments.
